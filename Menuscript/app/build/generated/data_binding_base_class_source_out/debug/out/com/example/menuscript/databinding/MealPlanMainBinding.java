// Generated by view binder compiler. Do not edit!
package com.example.menuscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.menuscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MealPlanMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addItemButton;

  @NonNull
  public final Button addRecipesButton;

  @NonNull
  public final Button completeMealPlanButton;

  @NonNull
  public final ListView ingredientListView;

  @NonNull
  public final EditText planDurationEditText;

  @NonNull
  public final ListView recipeListView;

  private MealPlanMainBinding(@NonNull LinearLayout rootView, @NonNull Button addItemButton,
      @NonNull Button addRecipesButton, @NonNull Button completeMealPlanButton,
      @NonNull ListView ingredientListView, @NonNull EditText planDurationEditText,
      @NonNull ListView recipeListView) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.addRecipesButton = addRecipesButton;
    this.completeMealPlanButton = completeMealPlanButton;
    this.ingredientListView = ingredientListView;
    this.planDurationEditText = planDurationEditText;
    this.recipeListView = recipeListView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MealPlanMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MealPlanMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.meal_plan_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MealPlanMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_item_button;
      Button addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.addRecipesButton;
      Button addRecipesButton = ViewBindings.findChildViewById(rootView, id);
      if (addRecipesButton == null) {
        break missingId;
      }

      id = R.id.completeMealPlanButton;
      Button completeMealPlanButton = ViewBindings.findChildViewById(rootView, id);
      if (completeMealPlanButton == null) {
        break missingId;
      }

      id = R.id.ingredientListView;
      ListView ingredientListView = ViewBindings.findChildViewById(rootView, id);
      if (ingredientListView == null) {
        break missingId;
      }

      id = R.id.planDurationEditText;
      EditText planDurationEditText = ViewBindings.findChildViewById(rootView, id);
      if (planDurationEditText == null) {
        break missingId;
      }

      id = R.id.recipeListView;
      ListView recipeListView = ViewBindings.findChildViewById(rootView, id);
      if (recipeListView == null) {
        break missingId;
      }

      return new MealPlanMainBinding((LinearLayout) rootView, addItemButton, addRecipesButton,
          completeMealPlanButton, ingredientListView, planDurationEditText, recipeListView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
