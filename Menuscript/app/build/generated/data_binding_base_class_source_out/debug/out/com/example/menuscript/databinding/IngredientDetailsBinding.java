// Generated by view binder compiler. Do not edit!
package com.example.menuscript.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.menuscript.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IngredientDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button ButtonDelete;

  @NonNull
  public final Button ButtonEdit;

  @NonNull
  public final TextView TVBestBeforeDate;

  @NonNull
  public final TextView TVCategory;

  @NonNull
  public final TextView TVCount;

  @NonNull
  public final TextView TVDescription;

  @NonNull
  public final TextView TVLocation;

  @NonNull
  public final TextView TVUnit;

  private IngredientDetailsBinding(@NonNull LinearLayout rootView, @NonNull Button ButtonDelete,
      @NonNull Button ButtonEdit, @NonNull TextView TVBestBeforeDate, @NonNull TextView TVCategory,
      @NonNull TextView TVCount, @NonNull TextView TVDescription, @NonNull TextView TVLocation,
      @NonNull TextView TVUnit) {
    this.rootView = rootView;
    this.ButtonDelete = ButtonDelete;
    this.ButtonEdit = ButtonEdit;
    this.TVBestBeforeDate = TVBestBeforeDate;
    this.TVCategory = TVCategory;
    this.TVCount = TVCount;
    this.TVDescription = TVDescription;
    this.TVLocation = TVLocation;
    this.TVUnit = TVUnit;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IngredientDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IngredientDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ingredient_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IngredientDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Button_delete;
      Button ButtonDelete = ViewBindings.findChildViewById(rootView, id);
      if (ButtonDelete == null) {
        break missingId;
      }

      id = R.id.Button_edit;
      Button ButtonEdit = ViewBindings.findChildViewById(rootView, id);
      if (ButtonEdit == null) {
        break missingId;
      }

      id = R.id.TV_best_before_date;
      TextView TVBestBeforeDate = ViewBindings.findChildViewById(rootView, id);
      if (TVBestBeforeDate == null) {
        break missingId;
      }

      id = R.id.TV_category;
      TextView TVCategory = ViewBindings.findChildViewById(rootView, id);
      if (TVCategory == null) {
        break missingId;
      }

      id = R.id.TV_count;
      TextView TVCount = ViewBindings.findChildViewById(rootView, id);
      if (TVCount == null) {
        break missingId;
      }

      id = R.id.TV_description;
      TextView TVDescription = ViewBindings.findChildViewById(rootView, id);
      if (TVDescription == null) {
        break missingId;
      }

      id = R.id.TV_location;
      TextView TVLocation = ViewBindings.findChildViewById(rootView, id);
      if (TVLocation == null) {
        break missingId;
      }

      id = R.id.TV_unit;
      TextView TVUnit = ViewBindings.findChildViewById(rootView, id);
      if (TVUnit == null) {
        break missingId;
      }

      return new IngredientDetailsBinding((LinearLayout) rootView, ButtonDelete, ButtonEdit,
          TVBestBeforeDate, TVCategory, TVCount, TVDescription, TVLocation, TVUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
